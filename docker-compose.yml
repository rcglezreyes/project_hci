services:
  mongo_db:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    container_name: mongo_db
    restart: unless-stopped
    ports:
      - "27037:27017"
    env_file:
      - ./mongodb/.env
    volumes:
      - mongodb_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - net_hci
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4g
        reservations:
          cpus: '1.0'
          memory: 2g

  mongo_express:
    build:
      context: ./mongoexpress
      dockerfile: Dockerfile
    container_name: mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    env_file:
      - ./mongoexpress/.env
    depends_on:
      - mongo_db
    networks:
      - net_hci
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m
        reservations:
          cpus: '0.25'
          memory: 256m
          
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./backend/gunicorn.conf.py:/etc/nginx/gunicorn.conf.py
      - ./backend/static:/app/staticfiles
    ports:
      - "8001:8001"
    depends_on:
      - mongo_db
      - redis
    env_file:
      - ./backend/.env
    networks:
      - net_hci

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "85:80"
      - "543:443"
    volumes:
      - ./backend/static:/usr/share/nginx/html_backend
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - backend
    networks:
      - net_hci

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6399:6379"
    volumes:
      - redis_data:/data
    networks:
      - net_hci

volumes:
  mongodb_data:
  redis_data:

networks:
  net_hci:
    driver: bridge